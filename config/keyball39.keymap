#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };

        dekara_kasihari: dekara_kasihari {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(TAB) &kp LS(TAB) &kp LS(TAB) &kp LS(TAB) &kp LS(TAB) &kp LS(TAB) &kp LS(TAB) &kp LC(V) &kp LC(HOME)>;
            label = "DEKARA_KASIHARI";
        };

        dekara_kasicut: dekara_kasicut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(END)) &kp LC(X)>;
            label = "DEKARA_KASICUT";
        };

        dekara_kararubi: dekara_kararubi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp LEFT_BRACKET &kp SPACE &kp SEMICOLON &kp SPACE &kp SPACE &kp SPACE &kp SPACE &kp RIGHT_BRACKET>;
            label = "DEKARA_KARARUBI";
        };

        dekara_clip: dekara_clip {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp MB2 &kp L>;
            label = "DEKARA_CLIP";
        };

        dekara_seiretu: dekara_seiretu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp MB2 &kp F>;
            label = "DEKARA_SEIRETU";
        };

        dekara_enctab: dekara_enctab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F8 &kp TAB &kp TAB &kp END>;
            label = "DEKARA_ENCTAB";
        };

        map_rm: map_rm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp LS(R) &kp LS(M)>;
            label = "MAP_RM";
        };

        pw: pw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp N0 &kp N8 &kp N0 &kp N9 &kp NUMBER_2 &kp N7>;
            label = "PW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "MCZ";
            bindings = <
&kp Q             &kp W         &kp E     &kp R        &kp T                                  &kp Y        &kp U  &kp I     &kp O     &kp P
&kp A             &kp S         &kp D     &kp F        &kp G                                  &kp H        &kp J  &kp K     &kp L     &lt 5 MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C     &kp V        &kp B                                  &kp N        &kp M  &mkp MB1  &mkp MB2  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LALT  &lt 1 SPACE  &lt 5 LS(SPACE)  &lt 2 TAB  &lt 2 DEL  &lt 3 ENTER                             &kp BACKSPACE
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp BACKSPACE    &kp N7        &kp N8        &kp N9        &kp N0                        &kp COLON      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp LA(LS(F12))  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LS(F)                     &kp MINUS      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PERIOD
&kp LC(Z)        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &map_rm                       &kp BACKSLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH
&kp DEL          &trans        &none         &trans        &trans     &trans  &kp UNDER  &kp F10                                                  &kp BACKSPACE
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp PLUS      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp CARET      &kp PIPE                     &kp AT_SIGN   &kp SQT          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE
&kp MINUS     &kp LESS_THAN     &kp GREATER_THAN   &kp SEMICOLON  &kp COLON                    &kp COMMA     &kp DOLLAR       &kp PERCENT           &kp AMPERSAND          &kp PERIOD
&kp ASTERISK  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL      &kp UNDERSCORE               &kp QUESTION  &kp EXCLAMATION  &kp DOUBLE_QUOTES     &kp HASH               &kp NON_US_BACKSLASH
&kp CARET     &kp TILDE         &trans             &trans         &trans          &trans  &pw  &trans                                                                      &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&bt BT_CLR    &none     &none         &none         &none                   &none   &kp F7  &kp F8  &kp F9  &kp F10
&bt BT_SEL 0  &kp LEFT  &kp UP_ARROW  &kp UP_ARROW  &none                   &none   &kp F4  &kp F5  &kp F6  &kp F11
&bt BT_SEL 1  &none     &kp DOWN      &none         &none                   &none   &kp F1  &kp F2  &kp F3  &kp F12
&bt BT_SEL 2  &trans    &trans        &trans        &trans  &trans  &trans  &trans                          &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp N1          &kp N2          &kp N3        &kp N4     &kp N5                  &kp N6         &kp N7     &kp N8  &kp N9     &kp N0
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none                   &kp PAGE_UP    &mkp LCLK  &none   &mkp RCLK  &mkp MCLK
&none           &none           &none         &none      &none                   &kp PAGE_DOWN  &none      &none   &none      &none
&none           &trans          &trans        &trans     &trans  &trans  &trans  &mo 3                                        &none
            >;
        };

        edit_layer {
            label = "EDIT";
            bindings = <
&kp ESCAPE  &trans           &dekara_clip      &trans            &dekara_seiretu                         &kp F6                     &kp F7    &dekara_enctab  &trans        &kp LC(P)
&kp LC(A)   &dekara_kasicut  &dekara_kasihari  &dekara_kararubi  &trans                                  &trans                     &mkp MB5  &kp LEFT        &kp UP_ARROW  &kp RIGHT
&kp LC(Z)   &kp LC(X)        &kp LC(C)         &kp LC(V)         &kp LC(Y)                               &none                      &mkp MB4  &none           &kp DOWN      &kp END
&none       &none            &trans            &trans            &trans           &trans  &kp LG(LS(S))  &mt LANGUAGE_2 LANGUAGE_1                                          &kp DEL
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &bootloader                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };
    };
};
